<!DOCTYPE html>
<!-- saved from url=(0123)file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">



<meta name="generator" content="pandoc">

<meta name="viewport" content="width=device-width, initial-scale=1">


<meta name="date" content="2018-04-15">

<title>LufthansaR</title>



<style type="text/css">code{white-space: pre;}</style>
<style type="text/css">
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; } /* Keyword */
code > span.dt { color: #902000; } /* DataType */
code > span.dv { color: #40a070; } /* DecVal */
code > span.bn { color: #40a070; } /* BaseN */
code > span.fl { color: #40a070; } /* Float */
code > span.ch { color: #4070a0; } /* Char */
code > span.st { color: #4070a0; } /* String */
code > span.co { color: #60a0b0; font-style: italic; } /* Comment */
code > span.ot { color: #007020; } /* Other */
code > span.al { color: #ff0000; font-weight: bold; } /* Alert */
code > span.fu { color: #06287e; } /* Function */
code > span.er { color: #ff0000; font-weight: bold; } /* Error */
code > span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
code > span.cn { color: #880000; } /* Constant */
code > span.sc { color: #4070a0; } /* SpecialChar */
code > span.vs { color: #4070a0; } /* VerbatimString */
code > span.ss { color: #bb6688; } /* SpecialString */
code > span.im { } /* Import */
code > span.va { color: #19177c; } /* Variable */
code > span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code > span.op { color: #666666; } /* Operator */
code > span.bu { } /* BuiltIn */
code > span.ex { } /* Extension */
code > span.pp { color: #bc7a00; } /* Preprocessor */
code > span.at { color: #7d9029; } /* Attribute */
code > span.do { color: #ba2121; font-style: italic; } /* Documentation */
code > span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code > span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code > span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
</style>



<link href="data:text/css;charset=utf-8,body%20%7B%0Abackground%2Dcolor%3A%20%23fff%3B%0Amargin%3A%201em%20auto%3B%0Amax%2Dwidth%3A%20700px%3B%0Aoverflow%3A%20visible%3B%0Apadding%2Dleft%3A%202em%3B%0Apadding%2Dright%3A%202em%3B%0Afont%2Dfamily%3A%20%22Open%20Sans%22%2C%20%22Helvetica%20Neue%22%2C%20Helvetica%2C%20Arial%2C%20sans%2Dserif%3B%0Afont%2Dsize%3A%2014px%3B%0Aline%2Dheight%3A%201%2E35%3B%0A%7D%0A%23header%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0A%23TOC%20%7B%0Aclear%3A%20both%3B%0Amargin%3A%200%200%2010px%2010px%3B%0Apadding%3A%204px%3B%0Awidth%3A%20400px%3B%0Aborder%3A%201px%20solid%20%23CCCCCC%3B%0Aborder%2Dradius%3A%205px%3B%0Abackground%2Dcolor%3A%20%23f6f6f6%3B%0Afont%2Dsize%3A%2013px%3B%0Aline%2Dheight%3A%201%2E3%3B%0A%7D%0A%23TOC%20%2Etoctitle%20%7B%0Afont%2Dweight%3A%20bold%3B%0Afont%2Dsize%3A%2015px%3B%0Amargin%2Dleft%3A%205px%3B%0A%7D%0A%23TOC%20ul%20%7B%0Apadding%2Dleft%3A%2040px%3B%0Amargin%2Dleft%3A%20%2D1%2E5em%3B%0Amargin%2Dtop%3A%205px%3B%0Amargin%2Dbottom%3A%205px%3B%0A%7D%0A%23TOC%20ul%20ul%20%7B%0Amargin%2Dleft%3A%20%2D2em%3B%0A%7D%0A%23TOC%20li%20%7B%0Aline%2Dheight%3A%2016px%3B%0A%7D%0Atable%20%7B%0Amargin%3A%201em%20auto%3B%0Aborder%2Dwidth%3A%201px%3B%0Aborder%2Dcolor%3A%20%23DDDDDD%3B%0Aborder%2Dstyle%3A%20outset%3B%0Aborder%2Dcollapse%3A%20collapse%3B%0A%7D%0Atable%20th%20%7B%0Aborder%2Dwidth%3A%202px%3B%0Apadding%3A%205px%3B%0Aborder%2Dstyle%3A%20inset%3B%0A%7D%0Atable%20td%20%7B%0Aborder%2Dwidth%3A%201px%3B%0Aborder%2Dstyle%3A%20inset%3B%0Aline%2Dheight%3A%2018px%3B%0Apadding%3A%205px%205px%3B%0A%7D%0Atable%2C%20table%20th%2C%20table%20td%20%7B%0Aborder%2Dleft%2Dstyle%3A%20none%3B%0Aborder%2Dright%2Dstyle%3A%20none%3B%0A%7D%0Atable%20thead%2C%20table%20tr%2Eeven%20%7B%0Abackground%2Dcolor%3A%20%23f7f7f7%3B%0A%7D%0Ap%20%7B%0Amargin%3A%200%2E5em%200%3B%0A%7D%0Ablockquote%20%7B%0Abackground%2Dcolor%3A%20%23f6f6f6%3B%0Apadding%3A%200%2E25em%200%2E75em%3B%0A%7D%0Ahr%20%7B%0Aborder%2Dstyle%3A%20solid%3B%0Aborder%3A%20none%3B%0Aborder%2Dtop%3A%201px%20solid%20%23777%3B%0Amargin%3A%2028px%200%3B%0A%7D%0Adl%20%7B%0Amargin%2Dleft%3A%200%3B%0A%7D%0Adl%20dd%20%7B%0Amargin%2Dbottom%3A%2013px%3B%0Amargin%2Dleft%3A%2013px%3B%0A%7D%0Adl%20dt%20%7B%0Afont%2Dweight%3A%20bold%3B%0A%7D%0Aul%20%7B%0Amargin%2Dtop%3A%200%3B%0A%7D%0Aul%20li%20%7B%0Alist%2Dstyle%3A%20circle%20outside%3B%0A%7D%0Aul%20ul%20%7B%0Amargin%2Dbottom%3A%200%3B%0A%7D%0Apre%2C%20code%20%7B%0Abackground%2Dcolor%3A%20%23f7f7f7%3B%0Aborder%2Dradius%3A%203px%3B%0Acolor%3A%20%23333%3B%0Awhite%2Dspace%3A%20pre%2Dwrap%3B%20%0A%7D%0Apre%20%7B%0Aborder%2Dradius%3A%203px%3B%0Amargin%3A%205px%200px%2010px%200px%3B%0Apadding%3A%2010px%3B%0A%7D%0Apre%3Anot%28%5Bclass%5D%29%20%7B%0Abackground%2Dcolor%3A%20%23f7f7f7%3B%0A%7D%0Acode%20%7B%0Afont%2Dfamily%3A%20Consolas%2C%20Monaco%2C%20%27Courier%20New%27%2C%20monospace%3B%0Afont%2Dsize%3A%2085%25%3B%0A%7D%0Ap%20%3E%20code%2C%20li%20%3E%20code%20%7B%0Apadding%3A%202px%200px%3B%0A%7D%0Adiv%2Efigure%20%7B%0Atext%2Dalign%3A%20center%3B%0A%7D%0Aimg%20%7B%0Abackground%2Dcolor%3A%20%23FFFFFF%3B%0Apadding%3A%202px%3B%0Aborder%3A%201px%20solid%20%23DDDDDD%3B%0Aborder%2Dradius%3A%203px%3B%0Aborder%3A%201px%20solid%20%23CCCCCC%3B%0Amargin%3A%200%205px%3B%0A%7D%0Ah1%20%7B%0Amargin%2Dtop%3A%200%3B%0Afont%2Dsize%3A%2035px%3B%0Aline%2Dheight%3A%2040px%3B%0A%7D%0Ah2%20%7B%0Aborder%2Dbottom%3A%204px%20solid%20%23f7f7f7%3B%0Apadding%2Dtop%3A%2010px%3B%0Apadding%2Dbottom%3A%202px%3B%0Afont%2Dsize%3A%20145%25%3B%0A%7D%0Ah3%20%7B%0Aborder%2Dbottom%3A%202px%20solid%20%23f7f7f7%3B%0Apadding%2Dtop%3A%2010px%3B%0Afont%2Dsize%3A%20120%25%3B%0A%7D%0Ah4%20%7B%0Aborder%2Dbottom%3A%201px%20solid%20%23f7f7f7%3B%0Amargin%2Dleft%3A%208px%3B%0Afont%2Dsize%3A%20105%25%3B%0A%7D%0Ah5%2C%20h6%20%7B%0Aborder%2Dbottom%3A%201px%20solid%20%23ccc%3B%0Afont%2Dsize%3A%20105%25%3B%0A%7D%0Aa%20%7B%0Acolor%3A%20%230033dd%3B%0Atext%2Ddecoration%3A%20none%3B%0A%7D%0Aa%3Ahover%20%7B%0Acolor%3A%20%236666ff%3B%20%7D%0Aa%3Avisited%20%7B%0Acolor%3A%20%23800080%3B%20%7D%0Aa%3Avisited%3Ahover%20%7B%0Acolor%3A%20%23BB00BB%3B%20%7D%0Aa%5Bhref%5E%3D%22http%3A%22%5D%20%7B%0Atext%2Ddecoration%3A%20underline%3B%20%7D%0Aa%5Bhref%5E%3D%22https%3A%22%5D%20%7B%0Atext%2Ddecoration%3A%20underline%3B%20%7D%0A%0Acode%20%3E%20span%2Ekw%20%7B%20color%3A%20%23555%3B%20font%2Dweight%3A%20bold%3B%20%7D%20%0Acode%20%3E%20span%2Edt%20%7B%20color%3A%20%23902000%3B%20%7D%20%0Acode%20%3E%20span%2Edv%20%7B%20color%3A%20%2340a070%3B%20%7D%20%0Acode%20%3E%20span%2Ebn%20%7B%20color%3A%20%23d14%3B%20%7D%20%0Acode%20%3E%20span%2Efl%20%7B%20color%3A%20%23d14%3B%20%7D%20%0Acode%20%3E%20span%2Ech%20%7B%20color%3A%20%23d14%3B%20%7D%20%0Acode%20%3E%20span%2Est%20%7B%20color%3A%20%23d14%3B%20%7D%20%0Acode%20%3E%20span%2Eco%20%7B%20color%3A%20%23888888%3B%20font%2Dstyle%3A%20italic%3B%20%7D%20%0Acode%20%3E%20span%2Eot%20%7B%20color%3A%20%23007020%3B%20%7D%20%0Acode%20%3E%20span%2Eal%20%7B%20color%3A%20%23ff0000%3B%20font%2Dweight%3A%20bold%3B%20%7D%20%0Acode%20%3E%20span%2Efu%20%7B%20color%3A%20%23900%3B%20font%2Dweight%3A%20bold%3B%20%7D%20%20code%20%3E%20span%2Eer%20%7B%20color%3A%20%23a61717%3B%20background%2Dcolor%3A%20%23e3d2d2%3B%20%7D%20%0A" rel="stylesheet" type="text/css">

<script type="text/javascript" src="./LufthansaR_files/MathJax.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style></head>

<body><div id="MathJax_Message" style="display: none;"></div>




<h1 class="title toc-ignore">LufthansaR</h1>
<h4 class="date"><em>2018-04-15</em></h4>


<div id="TOC">
<ul>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#introduction-to-lufthansar">Introduction to LufthansaR</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#lufthansa-open-api">Lufthansa Open API</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#how-to-install-lufthansar">How to install LufthansaR</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#usage">Usage</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#how-to-deal-with-lufthansa-open-api-credentials">How to deal with Lufthansa Open API credentials</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#how-to-see-the-active-token-used">How to see the active token used</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#how-to-get-flight-status">How to get flight status</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#getting-status-of-flights-arriving-at-a-particular-airport">Getting status of flights arriving at a particular airport</a></li>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#flight_arrival_png"></a><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/image/flight_arrival_viz.png">flight_arrival_png</a><ul>
<li><a href="file://localhost/private/var/folders/g5/zxkqsl55307bwv3hwz5nmnpr0000gn/T/RtmpfV0z4o/preview-a704c58ef83.dir/LufthansaR.html#getting-status-of-flights-departing-from-a-particular-airport">Getting status of flights departing from a particular airport</a></li>
</ul></li>
</ul>
</div>

<div id="introduction-to-lufthansar" class="section level2">
<h2>Introduction to LufthansaR</h2>
<p><code>LufthansaR</code> is an API wrapper package for R. It enables programmers to access to <a href="https://developer.lufthansa.com/docs">Lufthansa Open API</a> from R environment.</p>
<p>This document introduces you to LufthansaR’s basic set of tools, and show how to use them. Once you have installed the package, read <code>vignette("LufthansaR")</code> to learn more.</p>
</div>
<div id="lufthansa-open-api" class="section level2">
<h2>Lufthansa Open API</h2>
<p>To have access to Lufthansa Open API, one has to sign in to Mashery, Lufthansa’s developer platform, and apply for a key. Please visit <a href="https://developer.lufthansa.com/docs/API_basics/">here</a>. </p>

<img src="../image/API_reg.png" alt="API registration page" style="width: auto;"/>

<p>Once you are registered, you will be given:</p>
<ul>
<li>a key and</li>
<li>a secret</li>
</ul>
<p>These two values can be exchanged for a <em>short-lived</em> access token. A valid access token must be sent with every API request while accessing any Lufthansa’s API. In other words, every Lufthansa API requires you to pass Oauth token when getting the data from it.</p>
</div>
<div id="how-to-install-lufthansar" class="section level2">
<h2>How to install LufthansaR</h2>
<p>You can install <code>LufthansaR</code> development version from GitHub</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">devtools<span class="op">::</span><span class="kw">install_github</span>(<span class="st">"peter0083/LufthansaR"</span>)</code></pre></div>
<p>CRAN version of the package will be scheduled to be added in the next version.</p>
</div>
<div id="usage" class="section level2">
<h2>Usage</h2>
<p>You can load <code>LufthansaR</code> as follows.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">library</span>(LufthansaR)</code></pre></div>
<p>This will load the core <code>lufthansaR</code> functions.</p>
</div>
<div id="how-to-deal-with-lufthansa-open-api-credentials" class="section level2">
<h2>How to deal with Lufthansa Open API credentials</h2>
<p>You can store your client ID and secret in a <code>~/.Renviron</code> file. R loads this file as a system variable in each new session. The package uses these variables to request new keys if needed. The <code>.Renviron</code> file should contain the lines</p>
<pre><code>LUFTHANSA_API_CLIENT_ID = 'xxxxxxxxxxxxxxxxxxxxxxxx'
LUFTHANSA_API_CLIENT_SECRET = 'xxxxxxxxxx'</code></pre>
<p>which specify the key and secret pair. This package does not remember the id or the secret.</p>
<p><strong>NOTE: The name of the variables should be EXACTLY:</strong></p>
<ul>
<li><code>LUFTHANSA_API_CLIENT_ID</code></li>
<li><code>LUFTHANSA_API_CLIENT_SECRET</code></li>
</ul>
<p>Because tokens last for 1.5 days and to prevent the abuse of continuously requesting new tokens, the package by default stores the token and its expiry in a file in the working directory called <code>.lufthansa-token</code>. Caching the token provides a way of using it across R sessions until it expires. Functions in the package use the <code>get_token()</code> command to access the API. For more information about the function, see <code>help(get_token)</code>.</p>
<p>Caching the token can be turned off by setting the following R option through</p>
<pre><code>options(lufthansar_token_cache = FALSE)</code></pre>
<p>Alternately, one can choose where to cache the token by using a filename instead</p>
<pre><code>options(lufthansar_token_cache = 'path/to/.token-cache')</code></pre>
<p>Users can see the token being used and its expiry by calling</p>
<pre><code>LufthansaR::get_creds_from_env()</code></pre>
</div>
<div id="how-to-see-the-active-token-used" class="section level2">
<h2>How to see the active token used</h2>
<p>Get the current token being used by the package.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">LufthansaR<span class="op">::</span><span class="kw">get_token</span>()</code></pre></div>
<p>Each token is valid for a specified period of time. When the token is valid, <code>LufthansaR</code> uses the <code>Client ID</code> and <code>Client Secret</code> in your <code>.Renviron</code>.</p>
</div>
<div id="how-to-get-flight-status" class="section level2">
<h2>How to get flight status</h2>
<p>This <code>get_flight_status()</code> function will print out the flight information</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">f_status &lt;-<span class="st"> </span>LufthansaR<span class="op">::</span><span class="kw">get_flight_status</span>(<span class="dt">flight_num =</span><span class="st">"LH493"</span>, <span class="dt">verbose =</span> <span class="ot">TRUE</span>)</code></pre></div>
<p>The default is the flight status for today. However, you can call 5 days into the future by passing <code>dep_date="2018-04-15"</code> argument. The departure date (YYYY-MM-DD) in the local time of the departure airport. To supress the update message that is printed, pass the argument <code>verbose = FALSE</code>.</p>
<p><code>LufthansaR</code> package utilizes <code>httr</code> to parse JSON content. You can access to different attributes of the already-parsed content:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># Departure Airport abbreviation</span>
f_status<span class="op">$</span>Departure<span class="op">$</span>AirportCode

<span class="co"># Scheduled Departure Time (departure local time)</span>
f_status<span class="op">$</span>Departure<span class="op">$</span>ScheduledTimeLocal<span class="op">$</span>DateTime

<span class="co"># Departure Terminal</span>
f_status<span class="op">$</span>Departure<span class="op">$</span>Terminal<span class="op">$</span>Name

<span class="co"># Departure Status</span>
f_status<span class="op">$</span>Departure<span class="op">$</span>TimeStatus<span class="op">$</span>Definition

<span class="co"># Arrival Airport abbreviation</span>
f_status<span class="op">$</span>Arrival<span class="op">$</span>AirportCode

<span class="co"># Scheduled Arrival Time (arrival local time)</span>
f_status<span class="op">$</span>Arrival<span class="op">$</span>ScheduledTimeLocal<span class="op">$</span>DateTime

<span class="co"># Arrival Terminal</span>
f_status<span class="op">$</span>Arrival<span class="op">$</span>Terminal<span class="op">$</span>Name

<span class="co"># Arrival Status</span>
f_status<span class="op">$</span>Arrival<span class="op">$</span>TimeStatus<span class="op">$</span>Definition</code></pre></div>
</div>
<div id="getting-status-of-flights-arriving-at-a-particular-airport" class="section level2">
<h2>Getting status of flights arriving at a particular airport</h2>
<p>Let’s load some packages that we will use below.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">library</span>(tidyverse)
<span class="kw">library</span>(lubridate)</code></pre></div>
<p>To obtain the information about flights at the arrival airport,</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">get_flight_status_arrival</span>(<span class="dt">airport =</span> <span class="st">"YVR"</span>, <span class="dt">fromDateTime =</span> <span class="st">"2018-04-13T00:00"</span>)</code></pre></div>
<p>The output is the <code>httr</code> parsed content. The format of <code>fromDateTime</code> is <code>YYYY-MM-DDTHH:MM</code>. This is ISO-8601 date format. Let’s assume that we are interested in flights arriving at <code>FRA</code> around this time. And let’s assume we are interested in showing some departure delays of those flights in a visualization.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># This to get the current local time at FRA and convert it to the ISO-8601 format.</span>
tm &lt;-<span class="st"> </span><span class="kw">as.POSIXlt</span>(<span class="kw">Sys.time</span>(), <span class="dt">tz=</span><span class="st">"Europe/Berlin"</span>, <span class="st">"%Y-%m-%dT%H:%M"</span>)
tm_FRA &lt;-<span class="st"> </span><span class="kw">strftime</span>(tm,  <span class="st">"%Y-%m-%dT%H:%M"</span>)
<span class="co"># to parse the content</span>
parsed_content &lt;-<span class="st"> </span>LufthansaR<span class="op">::</span><span class="kw">get_flight_status_arrival</span>(<span class="dt">airport =</span> <span class="st">"FRA"</span>, <span class="dt">fromDateTime =</span> tm_FRA)</code></pre></div>
<p>You can see the content return by typing <code>parsed_content</code>. It is possible that there might not be any flight arriving at the time specified. Let’s first see how many flights the API returns.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="cf">if</span> (parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Meta<span class="op">$</span>TotalCount <span class="op">==</span><span class="st"> </span><span class="dv">1</span>){

  (no_flight_returned &lt;-parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Meta<span class="op">$</span>TotalCount)

} <span class="cf">else</span>{

  (no_flight_returned &lt;-<span class="st"> </span><span class="kw">summary</span>(parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights)[<span class="dv">1</span>])

}</code></pre></div>
<p>In the following, a visualization is created by using the return content for departure delay for those flight arriving at FRA.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># The following is performed if the API returns some flight information</span>
<span class="cf">if</span>(<span class="op">!</span>(<span class="kw">is.nan</span>(no_flight_returned) <span class="op">|</span><span class="st"> </span>no_flight_returned <span class="op">&lt;=</span><span class="st"> </span><span class="dv">1</span>)){
  flight_departure_data &lt;-<span class="st"> </span><span class="kw">data.frame</span>(<span class="dt">dept_airport =</span> <span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned),
            <span class="dt">scheduled_dept =</span><span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned), <span class="dt">actual_dept =</span><span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned))

  <span class="co"># wrangle the data</span>
  <span class="cf">for</span> (i <span class="cf">in</span> <span class="dv">1</span><span class="op">:</span>no_flight_returned){

    flight_departure_data<span class="op">$</span>dept_airport[i] &lt;-<span class="st"> </span>
<span class="st">      </span>parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Departure<span class="op">$</span>AirportCode

    flight_departure_data<span class="op">$</span>scheduled_dept[i] &lt;-<span class="st">  </span>
<span class="st">      </span>parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Departure<span class="op">$</span>ScheduledTimeLocal<span class="op">$</span>DateTime

    flight_departure_data<span class="op">$</span>actual_dept[i] &lt;-<span class="st"> </span>
<span class="st">      </span><span class="kw">ifelse</span> (<span class="kw">is.null</span>(parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Departure<span class="op">$</span>ActualTimeLocal<span class="op">$</span>DateTime), <span class="ot">NA</span>, parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Departure<span class="op">$</span>ActualTimeLocal<span class="op">$</span>DateTime)
  }

  <span class="co"># clean the json data</span>
  flight_departure_data<span class="op">$</span>delay &lt;-
<span class="st">    </span><span class="op">-</span><span class="kw">as.numeric</span>(<span class="kw">as.duration</span>(<span class="kw">interval</span>(<span class="kw">ymd_hm</span>(flight_departure_data<span class="op">$</span>actual_dept),                                                                          <span class="kw">ymd_hm</span>(flight_departure_data<span class="op">$</span>scheduled_dept))), <span class="st">"minutes"</span>)
  flight_departure_data&lt;-<span class="st"> </span>flight_departure_data <span class="op">%&gt;%</span><span class="st"> </span>
<span class="st">    </span><span class="kw">mutate</span>(<span class="dt">status =</span> <span class="kw">ifelse</span>(<span class="kw">is.na</span>(delay), <span class="st">"not departed"</span>,
                         <span class="kw">ifelse</span>(delay<span class="op">&gt;</span><span class="dv">0</span>, <span class="st">"delayed departure"</span>, <span class="st">"early/on-time"</span>))) <span class="op">%&gt;%</span><span class="st"> </span>
<span class="st">    </span><span class="kw">mutate</span>(<span class="dt">delay =</span> <span class="kw">ifelse</span>(<span class="kw">is.na</span>(delay), <span class="dv">1</span>,  delay))

  <span class="co"># visualize the result</span>
  <span class="kw">ggplot</span>(<span class="dt">data=</span>flight_departure_data, <span class="kw">aes</span>(<span class="dt">x=</span><span class="kw">as.factor</span>(dept_airport), <span class="dt">y=</span>delay)) <span class="op">+</span>
<span class="st">    </span><span class="kw">geom_bar</span>(<span class="dt">stat=</span><span class="st">"identity"</span>, <span class="kw">aes</span>(<span class="dt">fill=</span>status)) <span class="op">+</span><span class="st"> </span>
<span class="st">    </span><span class="kw">coord_flip</span>() <span class="op">+</span>
<span class="st">    </span><span class="kw">ggtitle</span>(<span class="kw">paste0</span>(<span class="st">"Delay Status at the Departure Airports for the Flights arriving at "</span>, <span class="st">"FRA"</span>)) <span class="op">+</span>
<span class="st">    </span><span class="kw">theme</span>(<span class="dt">legend.position =</span> <span class="st">"bottom"</span>) <span class="op">+</span>
<span class="st">    </span><span class="kw">xlab</span>(<span class="st">"Airport"</span>) <span class="op">+</span>
<span class="st">    </span><span class="kw">ylab</span>(<span class="st">"Delay (minutes)"</span>)
  } <span class="cf">else</span> {

  <span class="kw">print</span>(<span class="st">"No more than one flight information available at this time!"</span>)

}</code></pre></div>
</div>
<div id="flight_arrival_png" class="section level1">
<h1><img src="../image/flight_arrival_viz.png" alt="flight arrival visualization" style="width: auto;"/>flight_arrival_png</h1>
<div id="getting-status-of-flights-departing-from-a-particular-airport" class="section level2">
<h2>Getting status of flights departing from a particular airport</h2>
<p>To obtain the information about flights at the departure airport,</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="kw">get_flight_status_departure</span>(<span class="dt">airport =</span> <span class="st">"YVR"</span>, <span class="dt">fromDateTime =</span> <span class="st">"2018-04-13T00:00"</span>)</code></pre></div>
<p>The output is the <code>httr</code> parsed content. The format of <code>fromDateTime</code> is <code>YYYY-MM-DDTHH:MM</code>. This is ISO-8601 date format. Let’s assume that we are interested in flights departing from <code>FRA</code> around this time.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># This to get the current local time at FRA and convert it to the ISO-8601 format.</span>
tm &lt;-<span class="st"> </span><span class="kw">as.POSIXlt</span>(<span class="kw">Sys.time</span>(), <span class="dt">tz=</span><span class="st">"Europe/Berlin"</span>, <span class="st">"%Y-%m-%dT%H:%M"</span>)
tm_FRA &lt;-<span class="st"> </span><span class="kw">strftime</span>(tm,  <span class="st">"%Y-%m-%dT%H:%M"</span>)

<span class="co"># to parse the content</span>
parsed_content &lt;-<span class="st"> </span>LufthansaR<span class="op">::</span><span class="kw">get_flight_status_departure</span>(<span class="dt">airport =</span> <span class="st">"FRA"</span>, <span class="dt">fromDateTime =</span> tm_FRA)</code></pre></div>
<p>You can see the content return by typing <code>parsed_content</code>. It is possible that there might not be any flight arriving at the time specified. It is possible that there might not be any flight arriving at the time specified. Let’s first see how many flights the API returns.</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># to count the number of flights returned</span>

<span class="cf">if</span> (parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Meta<span class="op">$</span>TotalCount <span class="op">==</span><span class="st"> </span><span class="dv">1</span>){

  (no_flight_returned &lt;-parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Meta<span class="op">$</span>TotalCount)

  } <span class="cf">else</span> {

  (no_flight_returned &lt;-<span class="st"> </span><span class="kw">summary</span>(parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights)[<span class="dv">1</span>])

}</code></pre></div>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r"><span class="co"># The following is performed if the API returns more than one flight</span>

<span class="cf">if</span>(<span class="op">!</span>(<span class="kw">is.nan</span>(no_flight_returned) <span class="op">|</span><span class="st"> </span>no_flight_returned <span class="op">&lt;=</span><span class="st"> </span><span class="dv">1</span>)){
  flight_departure_data &lt;-<span class="st"> </span><span class="kw">data.frame</span>(<span class="dt">flight_code =</span> <span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned),
            <span class="dt">scheduled_dept =</span><span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned), <span class="dt">destination_airport =</span><span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned), <span class="dt">arrival_time =</span><span class="kw">rep</span>(<span class="ot">NA</span>, no_flight_returned))

  <span class="co"># data wrangling</span>
  <span class="cf">for</span> (i <span class="cf">in</span> <span class="dv">1</span><span class="op">:</span>no_flight_returned){

    flight_departure_data<span class="op">$</span>flight_code[i] &lt;-<span class="st"> </span>
<span class="st">      </span><span class="kw">paste0</span>( parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>MarketingCarrier<span class="op">$</span>AirlineID,parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>MarketingCarrier<span class="op">$</span>FlightNumber)

    flight_departure_data<span class="op">$</span>scheduled_dept[i] &lt;-<span class="st">  </span>
<span class="st">      </span>parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Departure<span class="op">$</span>ScheduledTimeLocal<span class="op">$</span>DateTime

    flight_departure_data<span class="op">$</span>destination_airport[i] &lt;-<span class="st"> </span>parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Arrival<span class="op">$</span>AirportCode

    flight_departure_data<span class="op">$</span>arrival_time[i] &lt;-<span class="st"> </span>parsed_content<span class="op">$</span>FlightStatusResource<span class="op">$</span>Flights[[<span class="dv">1</span>]][[i]]<span class="op">$</span>Arrival<span class="op">$</span>ScheduledTimeLocal
  }

flight_departure_data

} <span class="cf">else</span> {

  <span class="kw">print</span>(<span class="st">"No flight information available at this time!"</span>)

}</code></pre></div>
<p>The following is a data frame of the departure data returned by Lufthansa API.</p>
<table>
<thead>
<tr class="header">
<th></th>
<th>flight_code</th>
<th>scheduled_dept</th>
<th>destination_airport</th>
<th>arrival_time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>1</td>
<td>LH1392</td>
<td>2018-04-15T09:00</td>
<td>PRG</td>
<td>2018-04-15T10:00</td>
</tr>
<tr class="even">
<td>2</td>
<td>LH1388</td>
<td>2018-04-15T09:00</td>
<td>POZ</td>
<td>2018-04-15T10:15</td>
</tr>
<tr class="odd">
<td>3</td>
<td>OS262</td>
<td>2018-04-15T09:00</td>
<td>SZG</td>
<td>2018-04-15T09:55</td>
</tr>
<tr class="even">
<td>4</td>
<td>LH048</td>
<td>2018-04-15T09:00</td>
<td>HAJ</td>
<td>2018-04-15T09:50</td>
</tr>
<tr class="odd">
<td>5</td>
<td>LH902</td>
<td>2018-04-15T09:00</td>
<td>LHR</td>
<td>2018-04-15T09:40</td>
</tr>
<tr class="even">
<td>6</td>
<td>LH1250</td>
<td>2018-04-15T09:00</td>
<td>LNZ</td>
<td>2018-04-15T10:00</td>
</tr>
<tr class="odd">
<td>7</td>
<td>LH1214</td>
<td>2018-04-15T09:00</td>
<td>GVA</td>
<td>2018-04-15T10:05</td>
</tr>
<tr class="even">
<td>8</td>
<td>LH1336</td>
<td>2018-04-15T09:00</td>
<td>BUD</td>
<td>2018-04-15T10:30</td>
</tr>
<tr class="odd">
<td>9</td>
<td>LH1298</td>
<td>2018-04-15T09:05</td>
<td>IST</td>
<td>2018-04-15T13:00</td>
</tr>
<tr class="even">
<td>10</td>
<td>LH260</td>
<td>2018-04-15T09:05</td>
<td>GOA</td>
<td>2018-04-15T10:30</td>
</tr>
<tr class="odd">
<td>11</td>
<td>LH988</td>
<td>2018-04-15T09:05</td>
<td>AMS</td>
<td>2018-04-15T10:20</td>
</tr>
<tr class="even">
<td>12</td>
<td>LH248</td>
<td>2018-04-15T09:10</td>
<td>MXP</td>
<td>2018-04-15T10:20</td>
</tr>
<tr class="odd">
<td>13</td>
<td>LH1358</td>
<td>2018-04-15T09:10</td>
<td>WRO</td>
<td>2018-04-15T10:25</td>
</tr>
<tr class="even">
<td>14</td>
<td>LH1158</td>
<td>2018-04-15T09:10</td>
<td>PMI</td>
<td>2018-04-15T11:15</td>
</tr>
<tr class="odd">
<td>15</td>
<td>LH352</td>
<td>2018-04-15T09:10</td>
<td>BRE</td>
<td>2018-04-15T10:05</td>
</tr>
<tr class="even">
<td>16</td>
<td>LH1470</td>
<td>2018-04-15T09:10</td>
<td>TSR</td>
<td>2018-04-15T12:00</td>
</tr>
<tr class="odd">
<td>17</td>
<td>LH836</td>
<td>2018-04-15T09:10</td>
<td>BLL</td>
<td>2018-04-15T10:25</td>
</tr>
<tr class="even">
<td>18</td>
<td>LH1148</td>
<td>2018-04-15T09:10</td>
<td>AGP</td>
<td>2018-04-15T12:05</td>
</tr>
<tr class="odd">
<td>19</td>
<td>LH810</td>
<td>2018-04-15T09:10</td>
<td>GOT</td>
<td>2018-04-15T10:45</td>
</tr>
<tr class="even">
<td>20</td>
<td>LH074</td>
<td>2018-04-15T09:10</td>
<td>DUS</td>
<td>2018-04-15T10:00</td>
</tr>
</tbody>
</table>
</div>
</div>



<!-- dynamically load mathjax for compatibility with self-contained -->
<script>
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
</script>



</body></html>
